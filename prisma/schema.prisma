generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String    @db.VarChar(255)
  lastName      String    @db.VarChar(255)
  email         String    @unique @db.VarChar(255)
  password      String    @db.VarChar(255)
  department    String?   @db.VarChar(255)
  position      String?   @db.VarChar(255)
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  quotationForms QuotationForm[] @relation("QuotationRequestor")

  @@map("user")
}

model Company {
  id                Int                @id @default(autoincrement())
  companyName       String             @db.VarChar(255)
  tinNumber         String             @db.VarChar(255)
  type              CompanyType
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  
  companyAddresses  CompanyAddress[]
  companyProponents CompanyProponent[]
  projects          Project[]
  quotationForms    QuotationForm[]    @relation("QuotationCompany")
  prForms           PrForm[]           @relation("PrCompany")
  poForms           PoForm[]           @relation("PoCompany")
  supplierPrForms   PrForm[]           @relation("PrSupplier")
  supplierPoForms   PoForm[]           @relation("PoSupplier")

  @@map("company")
  quotationsItems QuotationItem[]
  prItems PrItem[]
  poItems PoItem[]
}

model CompanyAddress {
  id               Int   @id @default(autoincrement())
  companyId        Int
  province         String   @db.VarChar(255)
  barangay         String   @db.VarChar(255)
  cityMunicipality String   @db.VarChar(255)
  houseNo          String   @db.VarChar(255)
  region           String   @db.VarChar(255)
  street           String   @db.VarChar(255)
  subdivision      String?  @db.VarChar(255)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  company          Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
}

model CompanyProponent {
  id            Int      @id @default(autoincrement())
  companyId     Int
  contactPerson String   @db.VarChar(255)
  contactNumber String   @db.VarChar(255)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  company       Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@map("companyProponents")
}

model Product {
  id            Int         @id @default(autoincrement())
  sku           String      @db.VarChar(255)
  name          String      @db.VarChar(255)
  description   String
  brand         String      @db.VarChar(255)
  category      String      @db.VarChar(255)
  subCategory   String      @db.VarChar(255)
  adCategory    String      @db.VarChar(255)
  uom           String      @db.VarChar(255)
  currentStock  Int         @default(0)
  orderedStock  Int         @default(0)
  isActive      Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([sku])
  quotationItems QuotationItem[]
  prItems        PrItem[]
  poItems        PoItem[]
}

model Project {
  id             Int              @id @default(autoincrement())
  workflowId     Int
  companyId      Int
  code           String           @db.VarChar(255)
  description    String           @db.Text
  workflowStage  Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  company        Company          @relation(fields: [companyId], references: [id], onDelete: Cascade)
  workflow       WorkflowTemplate @relation(fields: [workflowId], references: [id])
  quotationForms QuotationForm[]
  prForms        PrForm[]
  poForms        PoForm[]

  @@index([companyId])
  @@index([workflowId])
  @@map("project")
}

model QuotationForm {
  id              Int       @id @default(autoincrement())
  projectId       Int
  forCompanyId    Int
  requestorId     Int?
  deliveryTerm    String?   @db.Text
  approvedBudget  Int?
  bidPercentage   Int?
  paymentTerm     String?   @db.Text
  totalCost       Decimal?
  bidPrice        Decimal?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  project         Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  forCompany      Company  @relation("QuotationCompany", fields: [forCompanyId], references: [id])
  requestor       User?     @relation("QuotationRequestor", fields: [requestorId], references: [id])

  quotationItems QuotationItem[]
  @@index([projectId])
  @@index([forCompanyId])
  @@index([requestorId])
  @@map("quotationForm")
}

model QuotationItem {
  id            Int             @id @default(autoincrement())
  formId        Int
  productId     Int
  supplierId    Int     
  quantity      Int?
  internalPrice Decimal     
  clientPrice   Decimal
  total         Decimal
  remarks       String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  form          QuotationForm   @relation(fields: [formId], references: [id], onDelete: Cascade)
  product       Product         @relation(fields: [productId], references: [id])
  supplier      Company         @relation(fields: [supplierId], references: [id])

  @@index([formId])
  @@index([productId])
}

model PrForm {
  id             Int       @id @default(autoincrement())
  projectId      Int
  dateRequired   DateTime? @db.Date
  forCompanyId   Int
  fromSupplierId Int?
  preparedBy     String?   @db.VarChar(255)
  approvedBy     String?   @db.VarChar(255)
  totalCost      Decimal?
  bidPrice       Decimal?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  project        Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  forCompany     Company  @relation("PrCompany", fields: [forCompanyId], references: [id])
  fromSupplier   Company?  @relation("PrSupplier", fields: [fromSupplierId], references: [id])

  prItems PrItem[]
  @@index([projectId])
  @@index([forCompanyId])
  @@index([fromSupplierId])
  @@map("prForm")
}

model PrItem {
  id            Int       @id @default(autoincrement())
  formId        Int
  productId     Int
  supplierId    Int     
  quantity      Int?
  internalPrice Decimal     
  clientPrice   Decimal
  total         Decimal
  remarks       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  form          PrForm    @relation(fields: [formId], references: [id], onDelete: Cascade)
  product       Product   @relation(fields: [productId], references: [id])
  supplier      Company   @relation(fields: [supplierId], references: [id])

  @@index([formId])
  @@index([productId])
}

model PoForm {
  id             Int           @id @default(autoincrement())
  projectId      Int
  fromSupplierId Int?
  forCompanyId   Int
  paymentMethod  PaymentMethod?
  deliveryDate   DateTime?
  totalCost      Decimal?
  bidPrice       Decimal?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  project        Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  forCompany     Company      @relation("PoCompany", fields: [forCompanyId], references: [id])
  fromSupplier   Company?      @relation("PoSupplier", fields: [fromSupplierId], references: [id])


  poItems PoItem[]
  @@index([projectId])
  @@index([forCompanyId])
  @@index([fromSupplierId])
  @@map("poForm")
}

model PoItem {
  id            Int         @id @default(autoincrement())
  formId        Int
  productId     Int
  supplierId    Int     
  quantity      Int?
  internalPrice Decimal     
  clientPrice   Decimal
  total         Decimal
  remarks       String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  form          PoForm      @relation(fields: [formId], references: [id], onDelete: Cascade)
  product       Product     @relation(fields: [productId], references: [id])
  supplier      Company     @relation(fields: [supplierId], references: [id])

  @@index([formId])
  @@index([productId])
}

model WorkflowTemplate {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  description     String          @db.VarChar(255)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  workflowStages  WorkflowStage[]
  projects        Project[]

  @@map("workflowTemplate")
}

model WorkflowStage {
  id               Int              @id @default(autoincrement())
  templateId       Int
  name             String           @db.VarChar(255)
  code             String           @db.VarChar(255)
  order            Int
  requiresApproval Boolean
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  template         WorkflowTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@index([templateId])
  @@map("workflowStage")
}

enum CompanyType {
  client
  supplier
  internal
  vendor
}

enum PaymentMethod {
  cash
  credit_card
  bank_transfer
  check
  online_payment
}